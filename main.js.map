{"version":3,"file":"main.js","mappings":"mBACO,SAASA,EAAUC,GACtBA,EAAMC,UAAUC,IAAI,mBACpBC,SAASC,iBAAiB,UAAWC,GACrCL,EAAMI,iBAAiB,QAASE,EAClC,CAGO,SAASC,EAAWP,GACzBA,EAAMC,UAAUO,OAAO,mBACvBL,SAASM,oBAAoB,UAAWJ,GACxCL,EAAMS,oBAAoB,QAASH,EACrC,CAGO,SAASD,EAAgBK,GACZ,WAAdA,EAAMC,KAERJ,EADoBJ,SAASS,cAAc,oBAG/C,CAGO,SAASN,EAAiCI,IAC3CA,EAAMG,OAAOZ,UAAUa,SAAS,UAAYJ,EAAMG,OAAOZ,UAAUa,SAAS,kBAC9EP,EAAWG,EAAMK,cAErB,CC3BF,IAAMC,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAKpB,SAASC,EAAcC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAEJC,QAAQC,OAAO,WAADC,OAAYL,EAAIM,QAEzC,CAEO,IAsCMC,EAAe,SAACC,GAC3B,OAAOC,MAAM,GAADJ,OAAIV,EAAOC,QAAO,WAAAS,OAAUG,GAAU,CAChDE,OAAQ,SACRb,QAASF,EAAOE,UACfc,KAAKZ,EACV,EC3DMa,EAAe9B,SAASS,cAAc,kBAI/BsB,EAAa,SACxBC,GAEG,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+D,CAAC,EAAjEG,EAAUJ,EAAVI,WAAYC,EAAQL,EAARK,SAAUC,EAAgBN,EAAhBM,iBAAkBC,EAAWP,EAAXO,YAAaC,EAAMR,EAANQ,OAEjDC,EAAcZ,EAAaa,QAC9BlC,cAAc,SACdmC,WAAU,GACPC,EAAmBH,EAAYjC,cAAc,wBAC7CqC,EAAiBJ,EAAYjC,cAAc,sBAC3CsC,EAAYL,EAAYjC,cAAc,gBACtCuC,EAAeN,EAAYjC,cAAc,mBA2C/C,OA1CAiC,EAAYjC,cAAc,gBAAgBwC,IAAMjB,EAASkB,KACzDR,EAAYjC,cAAc,gBAAgB0C,IAAMnB,EAASoB,KACzDV,EAAYjC,cAAc,gBAAgB4C,YAAcrB,EAASoB,KACjEV,EAAYjC,cAAc,mBAAmB4C,YAC3CrB,EAASsB,MAAMnB,OAGjBU,EAAiB5C,iBAAiB,SAAS,WACzCoC,EAAWK,EAAaV,EAASuB,IACnC,IAGAR,EAAU9C,iBAAiB,SAAS,WAClCsC,EAAiBP,EACnB,IAGAc,EAAe7C,iBAAiB,SAAS,WACvCqC,EAASQ,EAAgBd,EAASuB,IAAKP,EACzC,IAQEhB,EAASsB,MAAME,MAAK,SAACC,GACnB,OAAOA,EAAKF,MAAQd,CACtB,IAEAK,EAAehD,UAAUC,IAAI,+BAE7B+C,EAAehD,UAAUO,OAAO,+BAG9B2B,EAAS0B,MAAMH,MAAQf,EACzBK,EAAiBc,MAAMC,QAAU,OAEjCf,EAAiB/C,UAAUC,IAAI,8BAG1B2C,CACT,EAGO,SAASJ,EAASQ,EAAgBpB,EAAQsB,GAC3CF,EAAehD,UAAUa,SAAS,+BDOjB,SAACe,GACtB,OAAOC,MAAM,GAADJ,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBG,GAAU,CACtDE,OAAQ,SACRb,QAASF,EAAOE,UACfc,KAAKZ,EACV,CCXI4C,CAAQnC,GACLG,MAAK,SAACiC,GACLhB,EAAehD,UAAUO,OAAO,+BAChC2C,EAAaK,YAAcS,EAAYR,MAAMnB,MAC/C,IACC4B,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAI,2BAA4BF,EAAI,IDN3C,SAACtC,GACtB,OAAOC,MAAM,GAADJ,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBG,GAAU,CACtDE,OAAQ,MACRb,QAASF,EAAOE,UACfc,KAAKZ,EACV,CCGIkD,CAAQzC,GACLG,MAAK,SAACiC,GACLhB,EAAehD,UAAUC,IAAI,+BAC7BiD,EAAaK,YAAcS,EAAYR,MAAMnB,MAC/C,IACC4B,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAI,+BAAgCF,EAAI,GAEtE,CAGO,SAAS3B,EAAWK,EAAahB,GACtCD,EAAaC,GACVG,MAAK,WACJa,EAAYrC,QACd,IACC0D,OAAM,SAACC,GACNC,QAAQC,IAAI,gCAAiCF,EAC/C,GACJ,CCvFA,IAOMI,EAAiB,SAACC,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAY5D,cAAc,IAADc,OAAK+C,EAAaG,GAAE,WAClEH,EAAaxE,UAAUO,OAAOkE,EAAiBG,iBAC/CF,EAAa1E,UAAUO,OAAOkE,EAAiBI,YAC/CH,EAAanB,YAAc,EAC7B,EAsBMuB,EAAoB,SAACC,EAAWC,EAAeP,IAN7B,SAACM,GACvB,OAAOA,EAAUrB,MAAK,SAACc,GACnB,OAAQA,EAAaS,SAASC,KAClC,GACF,CAGMC,CAAgBJ,IAIhBC,EAAcI,UAAW,EACzBJ,EAAchF,UAAUO,OAAOkE,EAAiBY,uBAJhDL,EAAcI,UAAW,EACzBJ,EAAchF,UAAUC,IAAIwE,EAAiBY,qBAKnD,EA2BaC,EAAkB,SAACf,EAAaE,GAC3C,IAAMM,EAAYQ,MAAMC,KAAKjB,EAAYkB,iBAAiBhB,EAAiBiB,gBACrEV,EAAgBT,EAAY5D,cAAc8D,EAAiBkB,sBAEjEZ,EAAUa,SAAQ,SAACpB,GACfF,EAAeC,EAAaC,EAAcC,EAC9C,IAEAK,EAAkBC,EAAWC,EAAeP,EAC9C,E,sGC7DA,IAQI/B,EARE+B,EAAmB,CACvBoB,aAAc,eACdH,cAAe,gBACfC,qBAAsB,iBACtBN,oBAAqB,yBACrBT,gBAAiB,0BACjBC,WAAY,wBAKRiB,GADe5F,SAASS,cAAc,kBAC1BT,SAASS,cAAc,kBAEnCoF,EAAa7F,SAASS,cAAc,yBACpCqF,EAAY9F,SAASS,cAAc,oBACnCsF,EAAW/F,SAASgG,MAAM,gBAC1BC,EAAejG,SAASS,cAAc,mBACtCyF,EAAqBlG,SAASS,cAAc,yBAE5C0F,EAAYnG,SAASS,cAAc,2BACnC2F,EAAWpG,SAASS,cAAc,kCAElC4F,EAAYrG,SAASS,cAAc,wBACnC6F,EAAetG,SAASS,cAAc,wBACtC8F,EAAcvG,SAASgG,MAAM,aAE7BQ,EAAaxG,SAASS,cAAc,qBAEpCgG,EAAeD,EAAW/F,cAAc,iBAExCiG,EAAiBF,EAAW/F,cAAc,mBAE1CkG,EAAc3G,SAASS,cAAc,iBACrCmG,EAAe5G,SAASS,cAAc,mBACtCoG,EAAcF,EAAYlG,cAAc,0BACxCqG,EAAyBH,EAAYlG,cAAc,iBACnDsG,EAAa/G,SAASgG,MAAM,cAElC,SAASgB,EAAcC,EAAWC,GACRA,EAAKzG,cAAc,kBAEzB4C,YADd4D,EAC4B,YAEA,eAElC,CAcA,SAASE,EAAuBC,GHAP,IAACC,EGCxBD,EAAIE,iBACJN,GAAc,EAAOL,IHFGU,EGGdR,EAAYU,MHFf5F,MAAM,GAADJ,OAAIV,EAAOC,QAAO,oBAAoB,CAChDc,OAAQ,QACRb,QAASF,EAAOE,QAChByG,KAAMC,KAAKC,UAAU,CACnBL,OAAQA,MAETxF,KAAKZ,IGHLY,MAAK,WACJ+E,EAAajD,MAAQ,0BAAHpC,OAA6BsF,EAAYU,MAAK,MAChEnH,EAAWuG,GACXI,EAAWY,OACb,IACC5D,OAAM,SAAC6D,GACN3D,QAAQ2D,MAAMA,EAChB,IACCC,SAAQ,kBAAMb,GAAc,EAAML,EAAY,GACnD,CA6EA,SAASpE,EAAiBuF,GACxBrB,EAAaxD,IAAM6E,EAAU5E,KAC7BuD,EAAatD,IAAM2E,EAAU1E,KAC7BsD,EAAerD,YAAcyE,EAAU1E,KACvCxD,EAAU4G,EACZ,CAzGAI,EAAa3G,iBAAiB,SAAS,WACrCL,EAAU+G,GACVvB,EAAgB2B,EAAYxC,EAC9B,IAEAuC,EAAuB7G,iBAAiB,SAAS,WAC/CL,EAAUmH,EACZ,IACAA,EAAW9G,iBAAiB,SAAUkH,GAiBtCJ,EAAW9G,iBAAiB,SAAUkH,GAItCtB,EAAW5F,iBAAiB,SAAS,WACnCkG,EAAUoB,MAAQtB,EAAa5C,YAC/B+C,EAASmB,MAAQrB,EAAmB7C,YACpCzD,EAAUkG,GACVV,EAAgBW,EAAUxB,EAC5B,IAoBAwB,EAAS9F,iBAAiB,UAhB1B,SAAiCM,GH3EP,IAAC6C,EAAM2E,EG4E/BxH,EAAM+G,iBACNN,GAAc,EAAOlB,IH7EI1C,EG8Ed+C,EAAUoB,MH9EUQ,EG8EH3B,EAASmB,MH7E9B5F,MAAM,GAADJ,OAAIV,EAAOC,QAAO,aAAa,CACzCc,OAAQ,QACRb,QAASF,EAAOE,QAChByG,KAAMC,KAAKC,UAAU,CACnBtE,KAAMA,EACN2E,MAAOA,MAERlG,KAAKZ,IGuELY,MAAK,SAACmG,GACL/B,EAAa5C,YAAc2E,EAAK5E,KAChC8C,EAAmB7C,YAAc2E,EAAKD,MAEtC3H,EAAW0F,EACb,IACC/B,OAAM,SAAC6D,GACN3D,QAAQC,IAAI0D,EACd,GACJ,IAOAvB,EAAUpG,iBAAiB,SAAS,WAClCsG,EAAYoB,QACZ/H,EAAU0G,GACVlB,EAAgBmB,EAAahC,EAC/B,IAmCAgC,EAAYtG,iBAAiB,UAhC7B,SAAiCM,GAC/BA,EAAM+G,iBACNN,GAAc,EAAOV,GACrB,IH7F0BlD,EAAMF,EG6F1B+E,EAAc,CAClB7E,KAAMmD,EAAY,cAAcgB,MAChCrE,KAAMqD,EAAYrD,KAAKqE,QH/FCnE,EGiGd6E,EAAY7E,KHjGQF,EGiGF+E,EAAY/E,KHhGnCvB,MAAM,GAADJ,OAAIV,EAAOC,QAAO,UAAU,CACtCc,OAAQ,OACRb,QAASF,EAAOE,QAChByG,KAAMC,KAAKC,UAAU,CACnBtE,KAAMA,EACNF,KAAMA,MAEPrB,KAAKZ,IG0FLY,MAAK,SAACqG,GACL,IAAMzF,EAASyF,EAASxE,MAAMH,IACxB4E,EAAUpG,EAAWmG,EAAU,CACnC7F,WAAAA,EACAC,SAAAA,EACAC,iBAAAA,EACAd,aAAAA,EACAe,YAAAA,EACAC,OAAAA,IAGF8D,EAAYoB,QACZ/B,EAAUwC,QAAQD,GAClB/H,EAAWkG,EACb,IACCvC,OAAM,SAAC6D,GACN3D,QAAQC,IAAI0D,EACd,IACCC,SAAQ,WACPb,GAAc,EAAMlB,EACtB,GACJ,IDrGgC,SAACvB,GACdc,MAAMC,KAAKtF,SAASuF,iBAAiBhB,EAAiBoB,eAC9DD,SAAQ,SAACrB,GACdA,EAAYpE,iBAAiB,UAAU,SAAUmH,GACjD,IAnBoB,SAAC/C,EAAaE,GACtC,IAAMM,EAAYQ,MAAMC,KAAKjB,EAAYkB,iBAAiBhB,EAAiBiB,gBACrEV,EAAgBT,EAAY5D,cAAc8D,EAAiBkB,sBAIjEb,EAAkBC,EAAWC,EAAeP,GAC5CM,EAAUa,SAAQ,SAACpB,GACfA,EAAarE,iBAAiB,SAAS,YAtClB,SAACoE,EAAaC,EAAcC,GACjDD,EAAaS,SAASsD,gBACtB/D,EAAagE,kBAAkBhE,EAAaiE,QAAQC,cAEpDlE,EAAagE,kBAAkB,IAE9BhE,EAAaS,SAASC,MAGzBZ,EAAeC,EAAaC,EAAcC,GAvBvB,SAACF,EAAaC,EAAckE,EAAcjE,GAC/D,IAAMC,EAAeH,EAAY5D,cAAc,IAADc,OAAK+C,EAAaG,GAAE,WAClEH,EAAaxE,UAAUC,IAAIwE,EAAiBG,iBAC5CF,EAAanB,YAAcmF,EAC3BhE,EAAa1E,UAAUC,IAAIwE,EAAiBI,WAC9C,CAgBI8D,CAAepE,EAAaC,EAAcA,EAAaoE,kBAAmBnE,EAI9E,CA4BUoE,CAAmBtE,EAAaC,EAAcC,GAC9CK,EAAkBC,EAAWC,EAAeP,EAChD,GACJ,GACF,CAOMqE,CAAkBvE,EAAaE,EACnC,GACF,CC0GAsE,CAAiBtE,GAIjBlD,QAAQyH,IAAI,CHzJHnH,MAAM,GAADJ,OAAIV,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UACfc,KAAKZ,GATDU,MAAM,GAADJ,OAAIV,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UACfc,KAAKZ,KG+JPY,MAAK,SAAAI,GAAsB,I,IAAA8G,G,EAAA,E,4CAAA9G,I,s1BAApB+G,EAAKD,EAAA,GAAEE,EAAOF,EAAA,GACpB9C,EAAa5C,YAAc4F,EAAQ7F,KACnC8C,EAAmB7C,YAAc4F,EAAQlB,MACzCnB,EAAajD,MAAMuF,gBAAkB,QAAH3H,OAAW0H,EAAQ5B,OAAM,MAC3D7E,EAAcyG,EAAQ1F,IACtByF,EAAMtD,SAAQ,SAAC1D,GACb,IAAMmH,EAAOpH,EAAWC,EAAU,CAChCK,WAAAA,EACAC,SAAAA,EACAC,iBAAAA,EACAd,aAAAA,EACAe,YAAAA,IAEFoD,EAAUwD,OAAOD,EAEnB,IACAlF,QAAQC,IAAI,UAAUmF,OACxB,IACCtF,OAAM,SAACC,GAAG,OAAKC,QAAQC,IAAI,gCAAiCF,EAAI,G","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// открытие попапа\nexport function openPopup(popup) {\n    popup.classList.add('popup_is-opened');\n    document.addEventListener('keydown', handleEscapeKey);\n    popup.addEventListener('click', handleOverlayAndCloseButtonClick);\n  };\n  \n  // закрытие попапа\n  export function closePopup(popup) {\n    popup.classList.remove('popup_is-opened');\n    document.removeEventListener('keydown', handleEscapeKey);\n    popup.removeEventListener('click', handleOverlayAndCloseButtonClick);\n  };\n  \n  // Escape\n  export function handleEscapeKey(event) {\n    if (event.key === 'Escape') {\n      const openedPopup = document.querySelector('.popup_is-opened');\n      closePopup(openedPopup);\n  };\n  };\n  \n  // крестик и оверлэй\n  export function handleOverlayAndCloseButtonClick(event)  {\n    if (event.target.classList.contains('popup') || event.target.classList.contains('popup__close')) {\n      closePopup(event.currentTarget);\n    };\n  };","const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-36\",\n  headers: {\n    authorization: \"77ca34b3-6444-48f5-aab5-959ed2f3341e\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n//проверка\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n//запрос данных профиля\nexport const getProfile = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\n//запрос данных карточек\nexport const getCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\n//отправка данных профиля\nexport const setProfile = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about,\n    }),\n  }).then(checkResponse);\n};\n\n//добавление новой карточки\nexport const postNewCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link,\n    }),\n  }).then(checkResponse);\n};\n\n// Удаление карточки\nexport const deleteMyCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\n// Отправка  лайка\nexport const putLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const delLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\n// Замена аватарки\nexport const setAvatar = (avatar) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar,\n    }),\n  }).then(checkResponse);\n};\n","import { putLike, delLike, deleteMyCard } from \"./api.js\";\nconst cardTemplate = document.querySelector(\"#card-template\"); // темплейт\n\n//создание карточки\n\nexport const createCard = (\n  cardData,\n  { deleteCard, likeCard, handleImageClick, profileIdMe, userId } = {}\n) => {\n  const cardElement = cardTemplate.content\n    .querySelector(\".card\")\n    .cloneNode(true);\n  const cardDeleteButton = cardElement.querySelector(\".card__delete-button\");\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const likesCountur = cardElement.querySelector(\".counting-likes\");\n  cardElement.querySelector(\".card__image\").src = cardData.link;\n  cardElement.querySelector(\".card__image\").alt = cardData.name;\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\n  cardElement.querySelector(\".counting-likes\").textContent =\n    cardData.likes.length;\n\n  // Добавление обработчика для кнопки удаления\n  cardDeleteButton.addEventListener(\"click\", () => {\n    deleteCard(cardElement, cardData._id);\n  });\n\n  // Добавление обработчика для изображения карточки\n  cardImage.addEventListener(\"click\", () => {\n    handleImageClick(cardData);\n  });\n\n  // Добавление обработчика для кнопки «лайк»\n  cardLikeButton.addEventListener(\"click\", () => {\n    likeCard(cardLikeButton, cardData._id, likesCountur);\n  });\n\n  //if (cardData.likes.some(like => like._id === userId)) {\n  //cardLikeButton.classList.add(\"card__like-button_is-active\");\n  //} else {\n  //cardLikeButton.classList.remove(\"card__like-button_is-active\");\n  //}\n  if (\n    cardData.likes.some((like) => {\n      return like._id === userId;\n    })\n  ) {\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\n  } else {\n    cardLikeButton.classList.remove(\"card__like-button_is-active\");\n  }\n\n  if (cardData.owner._id !== profileIdMe) {\n    cardDeleteButton.style.display = \"none\";\n  } else {\n    cardDeleteButton.classList.add(\"card__delete-button-hidden\");\n  }\n\n  return cardElement;\n};\n\n//лайк\nexport function likeCard(cardLikeButton, cardId, likesCountur) {\n  if (cardLikeButton.classList.contains(\"card__like-button_is-active\")) {\n    delLike(cardId)\n      .then((updatedCard) => {\n        cardLikeButton.classList.remove(\"card__like-button_is-active\");\n        likesCountur.textContent = updatedCard.likes.length;\n      })\n      .catch((err) => console.log(\"Ошибка при снятии лайка:\", err));\n  } else {\n    putLike(cardId)\n      .then((updatedCard) => {\n        cardLikeButton.classList.add(\"card__like-button_is-active\");\n        likesCountur.textContent = updatedCard.likes.length;\n      })\n      .catch((err) => console.log(\"Ошибка при добавлении лайка:\", err));\n  }\n}\n\n// удаление карточек\nexport function deleteCard(cardElement, cardId) {\n  deleteMyCard(cardId)\n    .then(() => {\n      cardElement.remove();\n    })\n    .catch((err) => {\n      console.log(\"Ошибка при удалении карточки:\", err);\n    });\n}\n","\n//показать ошибку\nconst showInputError = (formElement, inputElement, errorMessage, configValidation) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(configValidation.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(configValidation.errorClass);\n};\n//скрыть ошибку\nconst hideInputError = (formElement, inputElement, configValidation) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`)\n  inputElement.classList.remove(configValidation.inputErrorClass);\n  errorElement.classList.remove(configValidation.errorClass);\n  errorElement.textContent = '';\n};\n//проверка валидности\nconst checkInputValidity = (formElement, inputElement, configValidation) => {\n  if (inputElement.validity.patternMismatch) {\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n      inputElement.setCustomValidity('');\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, configValidation);\n  } else {\n    hideInputError(formElement, inputElement, configValidation);\n  }\n};\n\n//поиск невалидного поля\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n  });\n};\n//состояние кнопок\nconst toggleButtonState = (inputList, buttonElement, configValidation) => {\n  if (hasInvalidInput(inputList, configValidation)) {\n      buttonElement.disabled = true;\n      buttonElement.classList.add(configValidation.inactiveButtonClass);\n  } else {\n      buttonElement.disabled = false;\n      buttonElement.classList.remove(configValidation.inactiveButtonClass)\n  }\n};\n//слушатель на полях ввода\nconst setEventListeners = (formElement, configValidation) => {\n  const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\n  const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\n  //if (buttonElement) {\n    //  toggleButtonState(inputList, buttonElement, configValidation);\n // }\n  toggleButtonState(inputList, buttonElement, configValidation);\n  inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', function () {\n          checkInputValidity(formElement, inputElement, configValidation);\n          toggleButtonState(inputList, buttonElement, configValidation);\n      });\n  });\n};\n\nexport const enableValidation = (configValidation) => {\n  const formList = Array.from(document.querySelectorAll(configValidation.formSelector));\n  formList.forEach((formElement) => {\n      formElement.addEventListener('sumbit', function (evt) {\n      });\n      setEventListeners(formElement, configValidation);\n  })\n}\n\n//отчистка поля валидации\nexport const clearValidation = (formElement, configValidation) => {\n  const inputList = Array.from(formElement.querySelectorAll(configValidation.inputSelector));\n  const buttonElement = formElement.querySelector(configValidation.submitButtonSelector);\n  \n  inputList.forEach((inputElement) => {\n      hideInputError(formElement, inputElement, configValidation);\n  });\n\n  toggleButtonState(inputList, buttonElement, configValidation);\n};\n\n\n","import { initialCards } from \"./components/cards.js\";\nimport \"./pages/index.css\";\nimport {\n  openPopup,\n  closePopup,\n  handleEscapeKey,\n  handleOverlayAndCloseButtonClick,\n} from \"./components/modal.js\";\nimport { createCard, likeCard, deleteCard } from \"./components/card.js\";\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\nimport {\n  getCards,\n  getProfile,\n  deleteMyCard,\n  setProfile,\n  setAvatar,\n  postNewCard,\n} from \"./components/api.js\";\n\nconst configValidation = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\nlet profileIdMe;\n\nconst cardTemplate = document.querySelector(\"#card-template\"); // темплейт\nconst cardPlace = document.querySelector(\".places__list\"); // блок куда вставим карточки\n// редактирование профиля\nconst editButton = document.querySelector(\".profile__edit-button\"); // элемент кнопки\nconst popupEdit = document.querySelector(\".popup_type_edit\"); // попап профиля\nconst formEdit = document.forms[\"edit-profile\"];\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\n//z\nconst nameInput = document.querySelector(\".popup__input_type_name\");\nconst jobInput = document.querySelector(\".popup__input_type_description\");\n//создание карточки\nconst addButton = document.querySelector(\".profile__add-button\"); // кнопка\nconst popupNewCard = document.querySelector(\".popup_type_new-card\"); // попап создания\nconst formNewCard = document.forms[\"new-place\"];\n//картинка\nconst popupImage = document.querySelector(\".popup_type_image\"); // попап картинки\n//картинка в попапе\nconst imageInPopup = popupImage.querySelector(\".popup__image\");\n//описание картинки\nconst captionInPopup = popupImage.querySelector(\".popup__caption\");\n//аватар\nconst pupupAvatar = document.querySelector(\".popup_avatar\");\nconst profileImage = document.querySelector(\".profile__image\");\nconst inputAvatar = pupupAvatar.querySelector(\".popup__input_type_url\");\nconst popupButtonCloseAvatar = pupupAvatar.querySelector(\".popup__close\");\nconst formAvatar = document.forms[\"new-avatar\"];\n\nfunction renderLoading(isLoading, form) {\n  const buttonTextPopup = form.querySelector(\".popup__button\");\n  if (isLoading) {\n    buttonTextPopup.textContent = \"Сохранить\";\n  } else {\n    buttonTextPopup.textContent = \"Сохранение...\";\n  }\n}\n\n// Попап аватара\n\nprofileImage.addEventListener(\"click\", () => {\n  openPopup(pupupAvatar);\n  clearValidation(formAvatar, configValidation); // очистка ошибок\n});\n\npopupButtonCloseAvatar.addEventListener(\"click\", () => {\n  openPopup(formAvatar);\n});\nformAvatar.addEventListener(\"submit\", handleFormSubmitAvatar);\n\nfunction handleFormSubmitAvatar(evt) {\n  evt.preventDefault();\n  renderLoading(false, pupupAvatar);\n  setAvatar(inputAvatar.value)\n    .then(() => {\n      profileImage.style = `background-image: url('${inputAvatar.value}')`;\n      closePopup(pupupAvatar);\n      formAvatar.reset();\n    })\n    .catch((error) => {\n      console.error(error);\n    })\n    .finally(() => renderLoading(true, pupupAvatar));\n}\n\nformAvatar.addEventListener(\"submit\", handleFormSubmitAvatar);\n\n//папап профиля\n\neditButton.addEventListener(\"click\", () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  openPopup(popupEdit);\n  clearValidation(formEdit, configValidation);\n});\n\n// форма профиля\n\nfunction handleProfileFormSubmit(event) {\n  event.preventDefault();\n  renderLoading(false, popupEdit);\n  setProfile(nameInput.value, jobInput.value)\n    .then((data) => {\n      profileTitle.textContent = data.name;\n      profileDescription.textContent = data.about;\n      //formEdit.reset();\n      closePopup(popupEdit);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\n// слушатель формы профиля\nformEdit.addEventListener(\"submit\", handleProfileFormSubmit);\n\n//попап новой карточки\n\naddButton.addEventListener(\"click\", () => {\n  formNewCard.reset();\n  openPopup(popupNewCard);\n  clearValidation(formNewCard, configValidation);\n});\n\n// форма новой карточки\nfunction handleNewCardFormSubmit(event) {\n  event.preventDefault();\n  renderLoading(false, popupNewCard);\n  const newCardData = {\n    name: formNewCard[\"place-name\"].value,\n    link: formNewCard.link.value,\n  };\n  postNewCard(newCardData.name, newCardData.link)\n    .then((newCards) => {\n      const userId = newCards.owner._id;\n      const newCard = createCard(newCards, {\n        deleteCard,\n        likeCard,\n        handleImageClick,\n        deleteMyCard,\n        profileIdMe,\n        userId,\n      });\n\n      formNewCard.reset();\n      cardPlace.prepend(newCard);\n      closePopup(popupNewCard);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      renderLoading(true, popupEdit);\n    });\n}\n\n// слушатель сабмита для новой карточки\nformNewCard.addEventListener(\"submit\", handleNewCardFormSubmit);\n\n//попап с картинкой\nfunction handleImageClick(сardImage) {\n  imageInPopup.src = сardImage.link;\n  imageInPopup.alt = сardImage.name;\n  captionInPopup.textContent = сardImage.name;\n  openPopup(popupImage);\n}\nenableValidation(configValidation);\n\n//api\n// данные карточек и профиля\nPromise.all([getCards(), getProfile()])\n  .then(([cards, profile]) => {\n    profileTitle.textContent = profile.name;\n    profileDescription.textContent = profile.about;\n    profileImage.style.backgroundImage = `url('${profile.avatar}')`;\n    profileIdMe = profile._id;\n    cards.forEach((cardData) => {\n      const card = createCard(cardData, {\n        deleteCard,\n        likeCard,\n        handleImageClick,\n        deleteMyCard,\n        profileIdMe,\n      });\n      cardPlace.append(card);\n      profileIdMe;\n    });\n    console.log(\"profile\".Avatar);\n  })\n  .catch((err) => console.log(\"Ошибка при получении профиля:\", err));\n"],"names":["openPopup","popup","classList","add","document","addEventListener","handleEscapeKey","handleOverlayAndCloseButtonClick","closePopup","remove","removeEventListener","event","key","querySelector","target","contains","currentTarget","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","deleteMyCard","cardId","fetch","method","then","cardTemplate","createCard","cardData","_ref","arguments","length","undefined","deleteCard","likeCard","handleImageClick","profileIdMe","userId","cardElement","content","cloneNode","cardDeleteButton","cardLikeButton","cardImage","likesCountur","src","link","alt","name","textContent","likes","_id","some","like","owner","style","display","delLike","updatedCard","catch","err","console","log","putLike","hideInputError","formElement","inputElement","configValidation","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","formSelector","cardPlace","editButton","popupEdit","formEdit","forms","profileTitle","profileDescription","nameInput","jobInput","addButton","popupNewCard","formNewCard","popupImage","imageInPopup","captionInPopup","pupupAvatar","profileImage","inputAvatar","popupButtonCloseAvatar","formAvatar","renderLoading","isLoading","form","handleFormSubmitAvatar","evt","avatar","preventDefault","value","body","JSON","stringify","reset","error","finally","сardImage","about","data","newCardData","newCards","newCard","prepend","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref2","cards","profile","backgroundImage","card","append","Avatar"],"sourceRoot":""}